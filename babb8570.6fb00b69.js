(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{109:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(r),f=n,b=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return r?a.a.createElement(b,i(i({ref:t},l),{},{components:r})):a.a.createElement(b,i({ref:t},l))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},94:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),o=(r(0),r(109)),c={title:"Introduction"},i={unversionedId:"architecture-decisions/index",id:"architecture-decisions/index",isDocsHomePage:!1,title:"Introduction",description:"Architecture Decision Records",source:"@site/docs/architecture-decisions/index.md",slug:"/architecture-decisions/index",permalink:"/Data-Platform-Playbook/architecture-decisions/index",editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/architecture-decisions/index.md",version:"current",sidebar:"docs",previous:{title:"Exporting database snapshots to the Data Platform Landing Zone",permalink:"/Data-Platform-Playbook/docs/exporting-snapshot-to-landing-zone"},next:{title:"Record architecture decisions",permalink:"/Data-Platform-Playbook/architecture-decisions/0001-record-architecture-decisions"}},s=[{value:"Records:",id:"records",children:[]}],l={toc:s};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"architecture-decision-records"},"Architecture Decision Records"),Object(o.b)("p",null,"An Architectural Decision (AD) is a software design choice that addresses a functional or non-functional requirement\nthat is architecturally significant. An Architecturally Significant Requirement (ASR) is a requirement that has a\nmeasurable effect on a software system\u2019s architecture and quality. An Architectural Decision Record (ADR) captures a\nsingle AD, such as often done when writing personal notes or meeting minutes; the collection of ADRs created and\nmaintained in a project constitute its decision log."),Object(o.b)("h2",{id:"records"},"Records:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/Data-Platform-Playbook/architecture-decisions/0001-record-architecture-decisions"},"1: Record Architecture Decisions")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/Data-Platform-Playbook/architecture-decisions/0002-ingest-google-sheets-data"},"2: Ingest Google Sheets Data")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/Data-Platform-Playbook/architecture-decisions/0003-role-based-access-control"},"3: Role Based Access Control")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/Data-Platform-Playbook/architecture-decisions/0004-partition-strategy"},"4: Partition Strategy")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/Data-Platform-Playbook/architecture-decisions/0005-recovered-data"},"5: Recovered Data"))))}u.isMDXComponent=!0}}]);