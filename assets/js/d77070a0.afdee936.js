"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[9103],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return c}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=s(a),c=n,g=d["".concat(p,".").concat(c)]||d[c]||u[c]||o;return a?r.createElement(g,l(l({ref:t},m),{},{components:a})):r.createElement(g,l({ref:t},m))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2862:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),l=["components"],i={title:"Creating Glue jobs",description:"Creating Glue jobs in terraform",layout:"playbook_js",tags:["playbook"]},p=void 0,s={unversionedId:"playbook/transforming-data/create-glue-jobs",id:"playbook/transforming-data/create-glue-jobs",isDocsHomePage:!1,title:"Creating Glue jobs",description:"Creating Glue jobs in terraform",source:"@site/docs/playbook/transforming-data/create-glue-jobs.md",sourceDirName:"playbook/transforming-data",slug:"/playbook/transforming-data/create-glue-jobs",permalink:"/Data-Platform-Playbook/playbook/transforming-data/create-glue-jobs",editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/transforming-data/create-glue-jobs.md",tags:[{label:"playbook",permalink:"/Data-Platform-Playbook/tags/playbook"}],version:"current",frontMatter:{title:"Creating Glue jobs",description:"Creating Glue jobs in terraform",layout:"playbook_js",tags:["playbook"]},sidebar:"docs",previous:{title:"Ingest manually uploaded csv files",permalink:"/Data-Platform-Playbook/playbook/ingesting-data/ingest-data-from-csv-files"},next:{title:"Guide to testing data quality in Glue Jobs",permalink:"/Data-Platform-Playbook/playbook/transforming-data/data-quality-testing-guide"}},m=[{value:"Creating Glue jobs using the Glue jobs Terraform template",id:"creating-glue-jobs-using-the-glue-jobs-terraform-template",children:[]},{value:"Example module block",id:"example-module-block",children:[]}],u={toc:m};function d(e){var t=e.components,a=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"creating-glue-jobs-using-the-glue-jobs-terraform-template"},"Creating Glue jobs using the Glue jobs Terraform template"),(0,o.kt)("h4",{id:"1-copy-an-existing-glue-job-module-block-or-use-the-example-below-and-populate-the-variables"},"1. Copy an existing Glue job module block or use the example below and populate the variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/data-platform"},"Data Platform Project"),".\nIf you don't have the correct permissions, you'll get a '404' error (see ",(0,o.kt)("a",{parentName:"li",href:"/Data-Platform-Playbook/playbook/ingesting-data/google-sheets-import#prerequisites"},"prerequisites"),")."),(0,o.kt)("li",{parentName:"ul"},"Navigate to the main ",(0,o.kt)("inlineCode",{parentName:"li"},"terraform")," directory. Open ",(0,o.kt)("inlineCode",{parentName:"li"},"23-aws-glue-jobs-<YOUR-DEPARTMENT-NAME>.tf")," and copy an existing module block.\n",(0,o.kt)("em",{parentName:"li"},"Create a new tf file for your department, named ",(0,o.kt)("inlineCode",{parentName:"em"},"23-aws-glue-jobs-<YOUR-DEPARTMENT-NAME>.tf")," if it does not exist and refer to the ",(0,o.kt)("a",{parentName:"em",href:"#example-module-block"},"example")," below")),(0,o.kt)("li",{parentName:"ul"},"When updating the module",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Do not change any spacing before the ",(0,o.kt)("inlineCode",{parentName:"li"},"=")),(0,o.kt)("li",{parentName:"ul"},"Do not remove the ",(0,o.kt)("inlineCode",{parentName:"li"},'"quotation marks"')," around any values which use them")))),(0,o.kt)("p",null,"Update the ",(0,o.kt)("inlineCode",{parentName:"p"},"module")," name using the name convention ",(0,o.kt)("inlineCode",{parentName:"p"},"<job_name>_<department_name>"),', for example "liberator_pcn_denormalisation_housing_repairs",\nit must be all lowercase with words separated by underscores. Ensure it\'s unique to all other module names in this file.'),(0,o.kt)("h4",{id:"the-following-input-variables-are-required"},"The following input variables are required:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"department"),": This will be ",(0,o.kt)("inlineCode",{parentName:"li"},"module.department_<YOUR_DEPARTMENT_NAME>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"job_name"),": The name of your glue job prefixed with ",(0,o.kt)("inlineCode",{parentName:"li"},"${local.short_identifier_prefix}")," and your department name e.g. ",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'"${local.short_identifier_prefix}housing repairs address cleaning"\n')))),(0,o.kt)("h4",{id:"the-following-variables-are-optional"},"The following variables are optional:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"job_description"),': A description of the AWS glue job e.g. "Exports Google Sheets import datasets to the landing zone"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"job_parameters"),": Parameters used in your Glue job. Example job parameters:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},'"--s3_bucket_target"'),": the output S3 location for your Glue job\ne.g. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'"s3://${module.<S3_BUCKET_ZONE>_zone.bucket_id}/<YOUR_DEPARTMENT_NAME>/<FOLDER_NAME>"\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},'"--s3_prefix"'),": a prefix directory to ",(0,o.kt)("strong",{parentName:"p"},'"--s3_bucket_target"')," to write the output data to within the target location\ne.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'"<YOUR_DEPARTMENT_NAME>/<FOLDER_NAME>/"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},'"--s3_bucket_source"'),": the S3 source of the data used in the glue job\ne.g."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'"s3://${module.<S3_BUCKET_ZONE>_zone.bucket_id}/<YOUR_DEPARTMENT_NAME>/<FOLDER_NAME>"\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},'"--source_catalog_table"'),": the Glue catalog source table of the data used in the Glue job\ne.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'"housing_repairs_repairs_purdy"')),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"NOTE: if sourcing data from a catalog table, the ",(0,o.kt)("inlineCode",{parentName:"em"},"--source_catalog_database")," job parameter must be set as well")," "))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},'"--source_catalog_database"'),": the Glue database which contains the glue catalog table needed for the Glue job\ne.g. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"module.department_<YOUR_DEPARTMENT_NAME>.<ZONE>_catalog_database_name\n")))),(0,o.kt)("p",{parentName:"li"},"See the ",(0,o.kt)("a",{parentName:"p",href:"#example-module-block"},"example module")," below for a complete example.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"script_name"),": Name of the Glue job script. If no value is provided, then this will default to the same name as the job name.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"workflow_name"),": An existing workflow to add the triggers to"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"NOTE: this module does not create Glue workflows")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"triggered_by_crawler"),": The Glue job that will trigger this job e.g. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"module.<job_name>_<department_name>.crawler_name\n")),(0,o.kt)("p",{parentName:"li"},"Can populate either this variable, the ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_job")," variable, or the ",(0,o.kt)("strong",{parentName:"p"},"schedule")," variable.\nThe job created in this module will be triggered on completion of either\nthe crawler given here or the job given in ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_job"),", or the ",(0,o.kt)("strong",{parentName:"p"},"schedule"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"triggered_by_job"),": The Glue job that will trigger this job e.g. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"module.<job_name>_<department_name>.job_name\n")),(0,o.kt)("p",{parentName:"li"},"Can populate either this variable, the ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_crawler")," variable, or the ",(0,o.kt)("strong",{parentName:"p"},"schedule")," variable.\nThe job created in this module will be triggered on completion of either\nthe job given here or the crawler given in ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_crawler"),", or the ",(0,o.kt)("strong",{parentName:"p"},"schedule"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"schedule"),": Schedule to run the Glue job, eg ",(0,o.kt)("inlineCode",{parentName:"p"},'"cron(0 23 ? * 1-5 *)"'),". Can populate either this variable, ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_job")," or the ",(0,o.kt)("strong",{parentName:"p"},"triggered_by_crawler"),". "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"To create a new Cron expression follow the guidance provided by the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions"},"AWS Cron Expression documentation"),"."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"crawler_details"),": Inputs required to create a crawler. If this is not provided then no crawler will be created. These are:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"database_name"),": Glue database where results are written",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"module.department_<YOUR_DEPARTMENT_NAME>.<S3_BUCKET_ZONE>_catalog_database_name\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"s3_target_location"),": The S3 location to be crawled.\nThis will likely be the same as the value of ",(0,o.kt)("inlineCode",{parentName:"li"},"--s3_bucket_target")," set in the Glue job's job parameters",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"s3://${module.refined_zone_bucket_id}/${<YOUR_DEPARTMENT_NAME>}/${var.dataset_name}/cleaned/\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"table_prefix")," (Optional): The table prefix used for catalog tables that are created in the specified Glue database (",(0,o.kt)("strong",{parentName:"li"},"database_name")," variable set above)\ne.g. ",(0,o.kt)("inlineCode",{parentName:"li"},'"housing_repairs_"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"configuration")," (Optional): By default, the ",(0,o.kt)("inlineCode",{parentName:"li"},"TableGroupingPolicy")," will be set to ",(0,o.kt)("inlineCode",{parentName:"li"},"CombineCompatibleSchemas"),"  "))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"number_of_workers_for_glue_job"),": Specify the number of workers to use for the glue job. The is set to 2 by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"glue_job_worker_type"),': Worker type for Glue job. The default is Standard. This can either be set as "Standard", "G.1X" or "G.2X". ')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"max_concurrent_runs_of_glue_job"),": Max number of concurrent runs for the glue job. The is set to 1 by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"trigger_enabled"),": Set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," to disable scheduled or conditional triggers for the glue job. This is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," by default."))),(0,o.kt)("h4",{id:"3-committing-your-changes-using-the-github-ui-the-data-platform-team-needs-to-approve-any-changes-to-the-code-so-your-change-wont-happen-automatically-to-submit-your-change"},"3. Committing your changes using the GitHub UI: The Data Platform team needs to approve any changes to the code, so your change won't happen automatically. To submit your change:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Provide a description to explain what you've changed."),(0,o.kt)("li",{parentName:"ul"},"Select the option to create a ",(0,o.kt)("inlineCode",{parentName:"li"},"new branch")," for this commit (i.e. the code you've changed). You can just use the suggested name for your branch."),(0,o.kt)("li",{parentName:"ul"},"Once you click 'Propose changes' you'll have the opportunity to add even more detail if needed before submitting it for review.  Click 'Create Pull Request' when finished."),(0,o.kt)("li",{parentName:"ul"},"You'll receive an email to confirm when your changes have been approved.")),(0,o.kt)("h2",{id:"example-module-block"},"Example module block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markdown"},'module "manually_uploaded_parking_data_to_raw" {\nsource = "../modules/aws-glue-job"\n\ndepartment                     = module.department_housing_repairs\njob_name                       = "${local.short_identifier_prefix}housing repairs address cleaning"\nnumber_of_workers_for_glue_job = 4\ntrigger_enabled                = false\nglue_job_worker_type           = "Standard"\njob_parameters = {\n  "--s3_bucket_target"    = module.raw_zone.bucket_id\n  "--s3_bucket_source"    = "${module.landing_zone.bucket_id}/housing-repairs/repairs-axis/"\n  "--s3_prefix"           = "housing_repairs/repairs_axis/"\n}\ncrawler_details = {\n  database_name      = module.department_housing_repairs.raw_zone_catalog_database_name\n  s3_target_location = "s3://${module.raw_zone.bucket_id}/housing-repairs/repairs-axis/"\n  table_prefix       = "housing_repairs_"\n}\n')))}d.isMDXComponent=!0}}]);