(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{122:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(o,".").concat(d)]||u[d]||b[d]||r;return n?i.a.createElement(h,s(s({ref:t},c),{},{components:n})):i.a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(7),r=(n(0),n(122)),o={title:"Guide to testing on the Data Platform",description:"A beginners guide to testing on the data platform",layout:"playbook_js",tags:"playbook"},s={unversionedId:"playbook/unit-testing-guide",id:"playbook/unit-testing-guide",isDocsHomePage:!1,title:"Guide to testing on the Data Platform",description:"A beginners guide to testing on the data platform",source:"@site/docs/playbook/unit-testing-guide.md",slug:"/playbook/unit-testing-guide",permalink:"/Data-Platform-Playbook/playbook/unit-testing-guide",editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/unit-testing-guide.md",version:"current",sidebar:"docs",previous:{title:"Scheduling Liberator Glue Jobs",permalink:"/Data-Platform-Playbook/playbook/scheduling-liberator-glue-jobs"},next:{title:"Using Glue Studio",permalink:"/Data-Platform-Playbook/playbook/using-glue-studio"}},l=[{value:"Context",id:"context",children:[]},{value:"Organising your code so it can be tested",id:"organising-your-code-so-it-can-be-tested",children:[]},{value:"Writing your own tests",id:"writing-your-own-tests",children:[]},{value:"CI/CD Pipeline",id:"cicd-pipeline",children:[]}],c={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"context"},"Context"),Object(r.b)("p",null,"Historically, unit testing practices have helped:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Improve the speed at which PySpark scripts can be developed"),Object(r.b)("li",{parentName:"ul"},"Provide documentation for each script with example data they\nexpect, and what results they output "),Object(r.b)("li",{parentName:"ul"},"Increase the proportion of defects found before they reach staging environment"),Object(r.b)("li",{parentName:"ul"},"Help those who come to maintain your script make their change without being scared\nof breaking existing functionality")),Object(r.b)("p",null,"The most valuable code to test is the code which is subject to change,\nand has some complicated behaviour. We recommend that when writing PySpark\ncode which isn\u2019t exceedingly simple that you write some tests alongside that production code."),Object(r.b)("p",null,"HackIT have produced ",Object(r.b)("a",{parentName:"p",href:"https://www.youtube.com/embed/M-_F_Tr6paQ"},"a video describing unit testing principles for C#"),"\nwhich are transferable to Spark scripts."),Object(r.b)("h2",{id:"organising-your-code-so-it-can-be-tested"},"Organising your code so it can be tested"),Object(r.b)("p",null,"Writing tests around your spark scripts require them to be written in a way which makes them easy to test."),Object(r.b)("p",null,"Using ",Object(r.b)("a",{parentName:"p",href:"https://github.com/LBHackney-IT/Data-Platform/blob/2e4a89e280c326576a976b4f28c9b7faaa691ea4/scripts/address_cleaning.py#L16-L99"},"address cleaning")," as an example script, we have\nextracted all DataFrame manipulation code into a method, and then tested\nthe behaviours of that ",Object(r.b)("a",{parentName:"p",href:"https://github.com/LBHackney-IT/Data-Platform/blob/2e4a89e280c326576a976b4f28c9b7faaa691ea4/scripts/test_address_cleaning.py#L7-L15"},"with tests"),"."),Object(r.b)("p",null,'The "main" part of the ETL job which will run within the AWS Glue environment\nis then ',Object(r.b)("a",{parentName:"p",href:"https://github.com/LBHackney-IT/Data-Platform/blob/2e4a89e280c326576a976b4f28c9b7faaa691ea4/scripts/address_cleaning.py#L103-L140"},"wrapped in a conditional")," which prevents\nthat code from being run within the testing environment. All code, except import statements, that isn't in a method should be included in this conditional."),Object(r.b)("h2",{id:"writing-your-own-tests"},"Writing your own tests"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Ensure that you run the tests and that they are all passing before writing your own tests.\nSee ",Object(r.b)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/Data-Platform/blob/main/scripts/README.md"},"README.md")," for instructions on how to do this"),Object(r.b)("li",{parentName:"ul"},"The tests are stored in the scripts folder of the project alongside the glue scripts themselves.\nStart by creating your own glue job script as usual, ",Object(r.b)("inlineCode",{parentName:"li"},"script_name.py"),", and also a test file ",Object(r.b)("inlineCode",{parentName:"li"},"test_script_name.py"),".",Object(r.b)("br",{parentName:"li"}),'Test files should be named with "test" at the beginning of the file. For example, ',Object(r.b)("inlineCode",{parentName:"li"},"test_cleaning_script.py"),".",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"You will need to organise your script according to the ",Object(r.b)("a",{parentName:"li",href:"#organising-your-code-so-it-can-be-tested"},"Organising your code so it can be tested")," above"))),Object(r.b)("li",{parentName:"ul"},"Define a function within ",Object(r.b)("inlineCode",{parentName:"li"},"script_name.py"),", which takes in the input DataFrame(s), and returns the DataFrame to be written."),Object(r.b)("li",{parentName:"ul"},"Within your ",Object(r.b)("inlineCode",{parentName:"li"},"test_script_name.py")," start creating tests.\nYou can use the ",Object(r.b)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/Data-Platform/blob/main/scripts/test_spark_example.py"},"test_spark_example")," as a template and ",Object(r.b)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/Data-Platform/blob/2e4a89e280c326576a976b4f28c9b7faaa691ea4/scripts/address_cleaning.py#L16-L99"},"address cleaning"),' as an example of a fully tested script.\nTest method names should start with a "test" in their name, otherwise the tests won\u2019t be run.\nEnsure the name clearly describes what is being tested.\nFor example, if you are testing the behaviour of adding a unique id column, then a suitable name may be along the lines of ',Object(r.b)("inlineCode",{parentName:"li"},"test_creates_unique_id_column"),"."),Object(r.b)("li",{parentName:"ul"},"There are some helper functions in ",Object(r.b)("inlineCode",{parentName:"li"},"unit_testing_helpers.py")," which you can use in your tests.\nIf you do decide to use these functions, ensure you import them at the top of your test file."),Object(r.b)("li",{parentName:"ul"},"If your script is using a logger, you will need to pass it into your testable method.\nSee the ",Object(r.b)("inlineCode",{parentName:"li"},"clean_addresses")," function in the ",Object(r.b)("inlineCode",{parentName:"li"},"test_address_cleaning.py")," for an example of how you can do this. ")),Object(r.b)("p",null,"We use the following things to help write and run tests against pyspark scripts."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The testing framework that we use for the glue scripts is called ",Object(r.b)("a",{parentName:"li",href:"https://docs.pytest.org/en/6.2.x/contents.html"},"Pytest"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://docs.python.org/3/library/unittest.html"},"Unittest"),", is a testing framework like pytest, that has some helpful features that we use in some of the tests."),Object(r.b)("li",{parentName:"ul"},"Docker is used to run the tests locally.\nWe use a ",Object(r.b)("a",{parentName:"li",href:"https://aws.amazon.com/blogs/big-data/developing-aws-glue-etl-jobs-locally-using-a-container/"},"docker image provided by amazon")," that helps us replicate the environment that our glue jobs are run in.\nIt also has pyspark and pytest installed to allow us to easily run the tests. You will need ",Object(r.b)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"docker installed")," to run tests locally.")),Object(r.b)("h2",{id:"cicd-pipeline"},"CI/CD Pipeline"),Object(r.b)("p",null,"The tests will run each time a commit is made to a branch including when branches are merged into main.\nThe build will not run/deploy if there are failing tests.\nThis is to prevent breaking changes from being deployed to the Data Platform staging environment."),Object(r.b)("p",null,"This has been configured in the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/LBHackney-IT/Data-Platform/blob/main/.github/workflows/data_platform_stg.yml"},"Github workflows configuration file")))}p.isMDXComponent=!0}}]);