(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{107:function(e,t,o){"use strict";o.d(t,"a",(function(){return p})),o.d(t,"b",(function(){return d}));var n=o(0),a=o.n(n);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var b=a.a.createContext({}),u=function(e){var t=a.a.useContext(b),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=u(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=u(o),m=n,d=p["".concat(i,".").concat(m)]||p[m]||s[m]||r;return o?a.a.createElement(d,l(l({ref:t},b),{},{components:o})):a.a.createElement(d,l({ref:t},b))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var b=2;b<r;b++)i[b]=o[b];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,o)}m.displayName="MDXCreateElement"},69:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return i})),o.d(t,"metadata",(function(){return l})),o.d(t,"toc",(function(){return c})),o.d(t,"default",(function(){return u}));var n=o(3),a=o(7),r=(o(0),o(107)),i={title:"Google Sheets import",description:"Google Sheets import description",layout:"playbook_js",tags:"playbook"},l={unversionedId:"playbook/google-sheets-import",id:"playbook/google-sheets-import",isDocsHomePage:!1,title:"Google Sheets import",description:"Google Sheets import description",source:"@site/docs/playbook/google-sheets-import.md",slug:"/playbook/google-sheets-import",permalink:"/Data-Platform-Playbook/playbook/google-sheets-import",editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/google-sheets-import.md",version:"current",sidebar:"docs",previous:{title:"Zones",permalink:"/Data-Platform-Playbook/zones"},next:{title:"Using Glue Studio",permalink:"/Data-Platform-Playbook/playbook/using-glue-studio"}},c=[{value:"Preparing Google sheet for import",id:"preparing-google-sheet-for-import",children:[]},{value:"Getting Google sheet detail",id:"getting-google-sheet-detail",children:[]},{value:"Setting up AWS Glue job",id:"setting-up-aws-glue-job",children:[]}],b={toc:c};function u(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"preparing-google-sheet-for-import"},"Preparing Google sheet for import"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Open the Google sheet you would like to import"),Object(r.b)("li",{parentName:"ul"},"Ensure that all columns have headers. Columns without headers will be lost"),Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("inlineCode",{parentName:"li"},"Share")," in the top right corner of the sheet"),Object(r.b)("li",{parentName:"ul"},"If the document is unnamed, name it"),Object(r.b)("li",{parentName:"ul"},"Paste in the service account email address you have been provided into the email box"),Object(r.b)("li",{parentName:"ul"},"Ensure the suggested email matches the service account email and select it"),Object(r.b)("li",{parentName:"ul"},"On the new window, choose from the dropdown on the right hand side and select ",Object(r.b)("inlineCode",{parentName:"li"},"Viewer")),Object(r.b)("li",{parentName:"ul"},"Uncheck the ",Object(r.b)("inlineCode",{parentName:"li"},"Notify people")," checkbox"),Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("inlineCode",{parentName:"li"},"Share")),Object(r.b)("li",{parentName:"ul"},"You will be asked to confirm sharing outside the organisation, click ",Object(r.b)("inlineCode",{parentName:"li"},"share anyway")),Object(r.b)("li",{parentName:"ul"},"Your Google sheet is now available for import")),Object(r.b)("h2",{id:"getting-google-sheet-detail"},"Getting Google sheet detail"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You will need to obtain the document key from the url")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The document id is the portion of the url between ",Object(r.b)("inlineCode",{parentName:"p"},"https://docs.google.com/spreadsheets/d/")," and ",Object(r.b)("inlineCode",{parentName:"p"},"/edit#gid=0"),". See example below",Object(r.b)("br",null))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You will also need to obtain the worksheet name that you wish to have imported")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The worksheet name is located at the bottom left of the screen and unless it has been changed or other worksheets added, it will be called ",Object(r.b)("inlineCode",{parentName:"p"},"Sheet1"),". See example below\n(screenshot)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you would like multiple sheets imported, provide each worksheet name"))),Object(r.b)("h2",{id:"setting-up-aws-glue-job"},"Setting up AWS Glue job"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Before setting up an AWS Glue job, ensure that the relevant department configuration for that account is set up in AWS",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"see ",Object(r.b)("inlineCode",{parentName:"li"},"Adding a department")," section in ",Object(r.b)("inlineCode",{parentName:"li"},"managing-departments.md")))),Object(r.b)("li",{parentName:"ul"},"Open the ",Object(r.b)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/data-platform"},"Data Platform Project"),". You'll need to have a Github account (which you can create yourself using your Hackney email) and have been added to the 'LBHackney-IT' team to view this project (you'll need to request this from Rashmi Shetty). If you don't have the correct permissions, you'll get a '404' error."),Object(r.b)("li",{parentName:"ul"},"Navigate to the main ",Object(r.b)("inlineCode",{parentName:"li"},"terraform")," directory (data-platform/terraform)"),Object(r.b)("li",{parentName:"ul"},"Open the ",Object(r.b)("inlineCode",{parentName:"li"},"22-aws-glue-jobs")," terraform file"),Object(r.b)("li",{parentName:"ul"},"Copy one of the modules above and paste at the bottom of the file"),Object(r.b)("li",{parentName:"ul"},"Switch to 'edit mode' (using edit button on top right) and update the following fields:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"module"),' = "your-unique-module-name" (it is helpful to keep the same naming convention as your dataset/folder)'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"glue_job_name"),' = "Your AWS Glue job name" (this is what you\'ll see in the Glue console)'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"google_sheets_document_id"),' = "Your document id - see the ',Object(r.b)("inlineCode",{parentName:"li"},"Getting Google sheet detail"),' section above"'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"google_sheets_worksheet_name"),' = "The name of your worksheet - see the ',Object(r.b)("inlineCode",{parentName:"li"},"Getting Google sheet detail"),' section above" ',"[if you want multiple sheets do you add them all here or do you need a separate module for each?]"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"department_folder_name"),' = "The name of the department folder you would like to store in e.g. ',Object(r.b)("inlineCode",{parentName:"li"},"housing"),", ",Object(r.b)("inlineCode",{parentName:"li"},"social-care"),"\" (if this folder doesn't already exist in S3 you can name it here and this script will create it)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"output_folder_name"),' = "The name of the folder you would like to store in under the department e.g. ',Object(r.b)("inlineCode",{parentName:"li"},"housing-repair"),"\" (if this folder doesn't already exist in S3 you can name it here and this script will create it)")))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Optional: update the time schedule for the import job to run")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"By default, the import job will run every weekday at 11pm which is set using Cron time format if 'enable_glue_trigger' is not specified (i.e. there's no line for this in your module) or it's set to 'true'. If this is set to 'false' then your job will not run automatically on a schedule, and will have to be run manually within AWS."),Object(r.b)("li",{parentName:"ul"},"To create a new Cron time use a ",Object(r.b)("a",{parentName:"li",href:"https://www.freeformatter.com/cron-expression-generator-quartz.html"},"Cron Expression Generator")),Object(r.b)("li",{parentName:"ul"},"To override and set a new time schedule, add a new row to the respective module with the new Cron time: e.g. ",Object(r.b)("inlineCode",{parentName:"li"},'google_sheet_import_schedule = "cron(0 23 ? * 1-5 *)"')),Object(r.b)("li",{parentName:"ul"},"Note you cannot make a change to the cron schedule at the same time as setting ",Object(r.b)("inlineCode",{parentName:"li"},"enable_glue_trigger")," to false"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Committing your changes: The Data Platform team needs to approve any changes to the code, so your change won't happen automatically. To submit your change:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Provide a description to explain what you've changed"),Object(r.b)("li",{parentName:"ul"},"Select the option to create a ",Object(r.b)("inlineCode",{parentName:"li"},"new branch")," for this commit (i.e. the code you've changed). You can just use the suggested name for your branch."),Object(r.b)("li",{parentName:"ul"},"Once you click 'Propose changes' you'll have the opportunity to add even more detail if needed before submitted for review."),Object(r.b)("li",{parentName:"ul"},"You'll receive an email to confirm that your changes have been approved.")))))}u.isMDXComponent=!0}}]);